#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

set -e -o pipefail

#
# Usage
#

help()
{
    [[ $1 == stdout ]] && usage || usage >&2
    exit 1
}

usage()
{
    cat <<USAGE_END

Usage: $PROG_NAME [-h|--help] [-n|--dry-run]

    -n|--dry-run        Don't perform any action, just show what would be
                        installed.

    -h|--help           Print this help screen.
USAGE_END
}


#
# Parse CLI options
#

parse_cli_options()
{
    # Note that we use `"$@"' to let each command-line parameter expand to a
    # separate word. The quotes around `$@' are essential!
    # We need TEMP as the `eval set --' would nuke the return value of getopt.
    TEMP=$( getopt -o hn --long help,dry-run,no-epel -n "$PROG_NAME" -- "$@" )

    [[ $? != 0 ]] && help

    # Note the quotes around `$TEMP': they are essential!
    eval set -- "$TEMP"

    dryrun=no
    while true ; do
        case "$1" in
            -h|--help)          help stdout ;;
            -n|--dry-run)       dry_run=yes ; shift ;;
            --)                 shift; break ;;
            *)                  echo 'getopt: internal error...'; exit 1 ;;
        esac
    done
}


#
# Utility functions
#

die()
{
    echo "$@" >&2
    exit 1
}

parse_cli_options $@

run()
{
    if [ x$1 == xY ] ;then
	prefix="sudo "
    else
	prefix=""
    fi
    shift
    echo " > $*"
    if [ x$dryrun == xno ] ;then
	$prefix $*
    fi
}


run N xcode-select --install
run N brew install coreutils
run N brew install grep # GNU grep with -P option.
run N brew install castxml
run Y perl -MCPAN -e 'install YAML::XS'
run Y perl -MCPAN -e 'install File::Find::Rule'
run Y perl -MCPAN -e 'install IO::All'
run N brew link python@3.8
run N pip3 install ply
run N brew install asciidoc
run N brew install libyaml
run N brew install gawk
run N brew install gnu-sed
